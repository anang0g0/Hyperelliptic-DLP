N = 256
@le_u = [N, N, N, N]
@le_v = [N, N, N, N]
@uu = [N, N, N, N]
@vv = [N, N, N, N]
@U = [N, N, N, N]
@V = [N, N, N, N]

# /* definition of a curve */
def HEC()
  #find by Smart
  #y^2+xy=x^3+b1B^2+b2B^4+b3B^8
  @pa = 1208925819614311295169073
  @b1 = 1127280
  @b2 = 171398
  @b3 = 1370436

  #y^2+(x^4+a1x^3+a2x^2+a3x+a4)y+(x^9+a5x^6+a6x^4+a7x^3+a8x^2+a9x+e)
  @pb = 1208925819614311295169073
  @a1 = 624429
  @a2 = 1248858
  @a3 = 1442662
  @a4 = 386860
  @a5 = 1859582
  @a6 = 293124
  @a7 = 1783647
  @a8 = 1541982
  @a9 = 1370912
  @e = 1888298

  @pc = 584600649323611672814739995379292203636332479268
  #y^2+(x^2+c1x)y=x^5+x^4+c2x^2+c3x+c4
  c1 = 2012013793551629036365609
  c2 = 1586464037343056940725724
  c3 = 43334222987849600951547
  c4 = 774788345987798314632240

  #find by Harley
  @q = 10 ** 19 + 51
  @a = [3141592653589793238, 4626433832795028841, 9716939937510582097, 4944592307816406286, 2089986280348253421]
  #@u1_=[13131182302866750318,6953593084278582387]
  #@v1_=[@q,0] #infinity
  @uh = [8940387226809150403, 3838225076702837943]
  @vh = [8035450087728851271, 1893861348804881148]
  # ff=x^5+314159265358979338*x^4+4626433832795028841*x^3+9716939937510582097*x^2+4944592307816406286*x+2089986280348253421
  @u1 = [10027301878627002813, 9681764174062850433]
  #616419646419685014=a*3542790122851877922+b
  #0=a*6484511755775124891+b
  #616419646419685014=a*7058278367076753082
  @v1 = [9406915506559133975, 920961725690419616]
  @u2 = [15109848135481867673, 5563304430399854240]
  #2935061693073737419=a*5239897978117534135+b
  #3524464046627319761=a*9869950157364333538+b
  #589402353553582342=a*4630052179246799403
  @v2 = [7250939689363649434, 6461431514924022130]
  @J = 99999999982871020671452277000281660080
  #? 7054215880371151972602291562049
  s1 = 1712898036
  s2 = 11452277089352355350

  @b = [1597, 1041, 5503, 6101, 1887]
  @u = [1571353025997967, 12198441063534328]
  @v = [32227723250469108, 67133247565452990]
  @u0 = [70887725815800572, 94321182398888258]
  @v0 = [42016761890161508, 3182371156137467]

  #find by Lange
  # f=xx^5+153834295433461683634059*xx^3+1503542947764347319629935*xx^2+1930714025804554453580068*xx+790992824799875905266969
  @p3 = 1932005208863265003490787
  @F1 = [0, 153834295433461683634059, 1503542947764347319629935, 1930714025804554453580068, 790992824799875905266969]
  @uu0 = [1594018975878036024296315, 52552598504459997856285]
  @uu1 = [1791061143796384566472590, 160038959612724914387201]
  #504894935863953268767725=a*106028591185649525291891+b
  #704210062398295465154981=a*1487990384692386499004424+b
  @vv0 = [1288294670775269897135356, 942599769284250370891960]
  #1=a*704665787761008893641614+b
  #824513992484349685277891=a*1086395356035375672830976+b
  @vv1 = [325694573428709528176000, 1410279347067078324080410]
  @p4 = 3713820117856140824697372689
  # ff=x^5+241216435998068557682742515*x^3+553011586465186980114036462*x^2+1456621446251091989731057514*x+3440013483680364963850133535
  @F0 = [0, 241216435998068557682742515, 553011586465186980114036462, 1456621446251091989731057514, 3440013483680364963850133535]
  @uua = [3090907731099435637713212933, 3430279740253146837327450789]
  #1090190095529845640563737560=a*901573235033529767913345809+b
  #1607209110223949051233778495=a*2189334496065905869799867124+b
  @vva = [1516936926385660062377077660, 177161035616247877668423903]
  #1044171804289905858226438503=a*10486172923382208811538764+b
  #928996521279782754969642877=a*1874123356916514825274712274+b
  #3598644834846017721440577063=a*1863637183993132616463173510
  @uub = [1884609529839897034086251038, 265492627929763696542013047]
  @vvb = [515973747200726989346030903, 2866067948417124660466300132]

  #find by Gaudry
  #fg=x^5+2682810822839355644900736*x^3+226591355295993102902116*x^2+2547674715952929717899918*x+4797309959708489673059350
  @P = 5 * 10 ** 24 + 8503491
  @FF = [0, 2682810822839355644900736, 226591355295993102902116, 2547674715952929717899918, 4797309959708489673059350]
  @Jga = 24999999999994130438600999402209463966197516075699
  #@Jgb=25000000000005869731468829402229428962794965968171
  #50724386855111482309402*2779199501981512279739817%P
  #2055622596816515886446193*1553122609714208136553134%P
  #1520505942073936921231867
  @ug0 = [1, -1713538969626908355896596]
  @vg0 = [0, 138905579055173741542118]
  @ug1 = [1738366273424896804842766, 3184841659043138633535652]
  @vg1 = [2931056213155642836850986, 402980510097415333052905]
end

# invert of integer
def inv(a, n)
  d = n
  x = 0
  s = 1
  while (a != 0)
    q = d / a
    r = d % a
    d = a
    a = r
    t = x - q * s
    x = s
    s = t
  end
  gcd = d  # $\gcd(a, n)$

  return ((x + n) % (n / d))
end

def g2add(u11, u10, v11, v10, u21, u20, v21, v20, f4, f3, f2, f1, f0, p)
  a0 = u11 * u10; a1 = u21 * u20; d0 = u10 - u20; d1 = u11 - u21
  b0 = u11 * u11; b1 = u21 * u21; c0 = v20 - v10; c1 = v21 - v11
  e0 = -u20 + u10; s1 = a1 - a0; s2 = b1 - b0; s3 = s2 + e0
  iv = inv(d0 * s3 - d1 * s1, p)
  ss2 = u20 + u11 * u21 + u10; ss3 = u21 + u11
  l3 = inv(d0 * c1 - d1 * c0, p); l2 = inv(c0 * s3 - c1 * s1, p)
  l1 = u11 * l2 + v11 + (b0 - u10) * l3
  u31 = 2 * l2 * l3 + 1 - ss3
  u30 = 2 * l1 * l3 + l2 * l2 + 1 - f4 - u31 * ss3 - ss2
  ul0 = u30 * l3; ul = -u31 * l2 + l1
  v31 = -(u31 * u31 - ul0 + ul); v30 = -(u31 * ul0 + ul)

  return u31, u30, v31, v30
end

def g2dbl(u1, u0, v1, v0, f3, f2, f1, f0, p)
  uu1 = u1 * u1; uu0 = u1 * u0; uv01 = u0 * v1; uv10 = u1 * v0; uv11 = u1 * v1
  uv00 = u0 * v0
  d0 = 6 * v1 * uu1 - uv10; d1 = -4 * uv11 + 4 * v0; d2 = 2 * v1
  d3 = 6 * v1 * uu0 - 6 * uv00; d4 = -4 * uv01; d5 = 2 * v0
  e0 = 5 * (-u1 * uu1 + 2 * uu0) - 3 * f3 * u1 + 2 * f2
  e1 = 5 * (-u0 * uu0 + u0 * u0) - 3 * f3 * u0 + f1
  m0 = d3 - d5 * (uu1 - u0); m1 = d4 - d5 * (-u1)
  m3 = d0 - d2 * (uu1 - u0); m4 = d1 - d2 * (-u1)
  s1 = e1 - d5 * v1; s2 = e0 - d2 * v1
  iv = inv(m0 * m4 - m1 * m3, p)
  l3 = inv(m4 * s1 - m1 * s2, p); l2 = inv(m0 * s2 - m3 * s1, p)
  l1 = v1 + u1 * l2 - (uu1 - u0) * l3; l0 = v0 + u0 * l2 - (uu0) * l3
  ue1 = 2 * l3 * l2 - 2 * u1 - 1
  ue0 = 2 * l3 * l1 + l2 * l2 - 2 * u0 - uu0 - 2 * ue1 * u1
  uue1 = ue1 * ue1; uue0 = ue1 * ue0
  ve1 = (uu1 - ue0) * l3 - ue1 * l2 + l1
  ve0 = uue0 * l3 - ue0 * l2 + l0

  return ue1, ue0, ve1, ve0
end

def mktable(u, v)
  # print @q ,"\n"
  pp = 31
  print pp, "\n"
  @uu = u
  print @uu, "\n"
  @vv = v
  print @vv, "\n"
  a = [1, 1, 1, 1, 1]
  # print  a ,"\n"
  # print  @CRV_b ,"\n"

  # enzan table
  @le_u[0] = @uu
  @le_v[0] = @vv
  print @uu, " l673\n"
  print @vv, " l674\n"

  for i in 1..N - 1 #begin Pub_key at plain
    g2dbl(@uu[1], @uu[0], @vv[1], @vv[0], @FF[0], @FF[1], @FF[2], @FF[3], @q)
    @le_u[i] = @uu
    @le_v[i] = @vv
    #print i,"=",@le_u[i],"\n"

    #   @uu=@le_u[i]
    #   @vv=@le_v[i]
  end #of for
  print i, "i\n"
end

#D'=mD
def jac(kk, p)
  j = 0
  ki = [N]

  for j in 0..N
    ki[j] = 0
  end
  j = 0
  for i in 0..N
    if (((kk ^ (1 << i)) >> i) % 2 == 0) #testbit(kk,i)
      ki[j] = i
      j = j + 1
      print i, "L704\n"
    end
  end

  @U = @le_u[ki[0]]
  @V = @le_v[ki[0]]

  #print @le_u[ki[0]],"\n"
  #print @le_u[ki[2]],"\n"
  #exit();
  for i in 1..j - 1
    if (@U != @le_u[ki[i]])
      g2add(@U[0], @U[1], @le_u[ki[i]][0], @le_u[ki[i]][1], @V[0], @V[1], @le_v[ki[i]][0], @le_v[ki[i]][1], 0, 0, 0, @FF[0], @FF[1], @FF[2], @FF[3], @FF[4], p)
      #print "i=",i," ",@le_u[ki[i]][0],"\n"
    end

    if (@U == @le_u[ki[i]])
      print @le_u[ki[i]], "=", @U, "\n"
      print i, "de('A`)\n"
      exit()
    end
  end #of for
end

HEC()

mktable(@ug0, @vg0)
jac(@Jga, @P)
